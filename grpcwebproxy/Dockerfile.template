# Tested with: balena build --deviceType raspberrypi3 --arch armv7hf --logs
# Alternative: env CC=arm-linux-musleabihf-gcc CXX=arm-linux-musleabihf-g++ CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=7 go build -v -a -tags 'netgo' -ldflags '-linkmode external -extldflags "-static"'

FROM balenalib/%%RESIN_MACHINE_NAME%%-alpine-golang:1.12-build as builder
RUN [ "cross-build-start" ]
RUN go get -u -v github.com/golang/dep/cmd/dep
RUN go get -u -d -v github.com/improbable-eng/grpc-web/go/grpcwebproxy
WORKDIR /go/src/github.com/improbable-eng/grpc-web/go/grpcwebproxy
RUN /go/bin/dep ensure -v
RUN CGO_ENABLED=1 go install -v -x -tags 'netgo' -ldflags '-linkmode external -extldflags "-static"'
#RUN CGO_ENABLED=1 go install -v -tags 'netgo'
RUN [ "cross-build-end" ]


### Static build requires no runtime:
FROM scratch
ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
### Non-static build requires the alpine musl runtime:
#FROM balenalib/%%RESIN_MACHINE_NAME%%-alpine:run
#RUN [ "cross-build-start" ]
#RUN install_packages sqlite-libs
#RUN [ "cross-build-end" ]
COPY --from=builder /etc/nsswitch.conf /etc/nsswitch.conf
COPY --from=builder /etc/ssl/certs/ /etc/ssl/certs
COPY --from=builder /go/bin/linux_arm/grpcwebproxy /bin/grpcwebproxy
CMD ["/bin/grpcwebproxy", "--backend_addr=localhost:7000", "--run_tls_server=false", "--allow_all_origins", "--server_http_debug_port=7001", "--server_http_max_write_timeout=1h"]
